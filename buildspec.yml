version: 0.2

# AWS CodeBuild buildspec for Wish Keeper application
# This builds the Java application, creates a Docker image, and pushes to ECR

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Building image with tag $IMAGE_TAG"
  
  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building Java application with Maven..."
      - mvn clean package -DskipTests
      - echo "Building Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing Docker images to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - printf '[{"name":"wish-keeper-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Updating task definition..."
      - |
        cat > taskdef.json <<EOF
        {
          "family": "wish-keeper-task",
          "executionRoleArn": "$TASK_EXECUTION_ROLE_ARN",
          "taskRoleArn": "$TASK_ROLE_ARN",
          "networkMode": "awsvpc",
          "requiresCompatibilities": ["FARGATE"],
          "cpu": "512",
          "memory": "1024",
          "containerDefinitions": [
            {
              "name": "wish-keeper-app",
              "image": "$REPOSITORY_URI:$IMAGE_TAG",
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 8000,
                  "protocol": "tcp"
                }
              ],
              "environment": [
                {
                  "name": "DB_HOST",
                  "value": "$DB_HOST"
                },
                {
                  "name": "DB_PORT",
                  "value": "5432"
                },
                {
                  "name": "DB_NAME",
                  "value": "webapp_db"
                },
                {
                  "name": "DB_USER",
                  "value": "wishkeeper"
                }
              ],
              "secrets": [
                {
                  "name": "DB_PASSWORD",
                  "valueFrom": "$DB_PASSWORD_SECRET_ARN"
                }
              ],
              "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                  "awslogs-group": "/ecs/wish-keeper",
                  "awslogs-region": "$AWS_DEFAULT_REGION",
                  "awslogs-stream-prefix": "ecs"
                }
              },
              "healthCheck": {
                "command": ["CMD-SHELL", "curl -f http://localhost:8000/api/hello || exit 1"],
                "interval": 30,
                "timeout": 5,
                "retries": 3,
                "startPeriod": 60
              }
            }
          ]
        }
        EOF

artifacts:
  files:
    - imagedefinitions.json
    - taskdef.json

cache:
  paths:
    - '/root/.m2/**/*'
